unit TestUtilities;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, Vcl.Dialogs, System.SysUtils, Utilities, System.IOUtils;

type
  // Test methods for class TUtilities

  TestTUtilities = class(TTestCase)
  strict private
    FUtilities: TUtilities;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestremoveHifen;
    procedure TestjustNumbers;
    procedure TestcountCaracter;
    procedure TestisCEPValid;
  end;

implementation

procedure TestTUtilities.SetUp;
begin
  FUtilities := TUtilities.Create;

end;

procedure TestTUtilities.TearDown;
begin
  FUtilities.Free;
  FUtilities := nil;
end;

procedure TestTUtilities.TestremoveHifen;
var
  ReturnValue: string;
  CEPComHifen: string;
begin

  CEPComHifen :='75901-653';
  ReturnValue := FUtilities.removeHifen(CEPComHifen);
  CheckEquals(ReturnValue,'75901653','Falha ao testar Cep Sem Hifen');

end;

procedure TestTUtilities.TestjustNumbers;
var
  ReturnValue: Boolean;
  Texto: string;
begin
  Texto := '7590b6a3';
  ReturnValue := FUtilities.justNumbers(Texto);
  CheckFalse(ReturnValue, 'Campo Texto contém letras falha no teste');

end;

procedure TestTUtilities.TestcountCaracter;
var
  ReturnValue: Boolean;
  CEP: string;
begin
  // TODO: Setup method call parameters
  ReturnValue := FUtilities.countCaracter(CEP);
  // TODO: Validate method results
end;

procedure TestTUtilities.TestisCEPValid;
var
  ReturnValue: Boolean;
  CEP: string;
begin
  // TODO: Setup method call parameters
  ReturnValue := FUtilities.isCEPValid(CEP);
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTUtilities.Suite);
end.

