unit Utilities;


interface


uses
  System.IOUtils, System.SysUtils,Vcl.Dialogs;

type
  TUtilities = class

public

function removeHifen(const CEPComHifen: string): string;
function justNumbers(const Texto: string): Boolean;
function cepLength(const CEP: string): Boolean;
function isCEPValid(const CEP: string): Boolean;
  
end;              

implementation

function TUtilities.cepLength(const CEP: string):Boolean;
var
counter : Integer;
begin
Result := True;
  counter := Length(CEP);

   if counter <> 8  then
   begin
        ShowMessage('Cep deve conter 8 digitos');
        Result := False; 
   end;

  // Result := True;
   {else if counter < 8 then
   begin
        ShowMessage('Cep deve conter 8 digitos');
        Result := False;
   end
   else }

   
end;
            
  

function TUtilities.removeHifen(const CEPComHifen: string): string;
begin
  Result := StringReplace(CEPComHifen, '-', '', [rfReplaceAll]);
end;


function TUtilities.justNumbers(const Texto: string): Boolean;
var
  i: Integer;
begin
  Result := True;
  for i := 1 to Length(Texto) do
  begin
    if not (Texto[i] in ['0'..'9']) then
    begin
      ShowMessage('O Cep contém caracteres do tipo não numeros');
      Result := False;
      Break;
    end;
  end;
end;

function TUtilities.isCEPValid(const CEP: string): Boolean;
var
  cepLesshifem: string; 
  begin  
          
  cepLesshifem := removeHifen(CEP);   
  if not justNumbers(cepLesshifem) then
  begin   
    Result := False;
    //Exit;
  end;        
  
  if  not cepLength(cepLesshifem) then
  begin
    Result := False;
   // Exit;
  end;

  Result := True; 
end;


end.
